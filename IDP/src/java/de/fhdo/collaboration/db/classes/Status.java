/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package de.fhdo.collaboration.db.classes;
// Generated 15.05.2013 18:02:38 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Status generated by hbm2java
 */
@Entity
@Table(name="status"
    
)
public class Status  implements java.io.Serializable {


     private Long id;
     private Boolean isPublic;
     private Boolean isDeleted;
     private String status;
     private Set<Statusrel> statusrelsForStatusIdFrom = new HashSet<Statusrel>(0);
     private Set<Role> roles = new HashSet<Role>(0);
     private Set<Statusrel> statusrelsForStatusIdTo = new HashSet<Statusrel>(0);

    public Status() {
    }

    public Status(Boolean isPublic, Boolean isDeleted, String status, Set<Statusrel> statusrelsForStatusIdFrom, Set<Role> roles, Set<Statusrel> statusrelsForStatusIdTo) {
       this.isPublic = isPublic;
       this.isDeleted = isDeleted;
       this.status = status;
       this.statusrelsForStatusIdFrom = statusrelsForStatusIdFrom;
       this.roles = roles;
       this.statusrelsForStatusIdTo = statusrelsForStatusIdTo;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    
    @Column(name="isPublic")
    public Boolean getIsPublic() {
        return this.isPublic;
    }
    
    public void setIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
    }
    
    @Column(name="isDeleted")
    public Boolean getIsDeleted() {
        return this.isDeleted;
    }
    
    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }
    
    @Column(name="status", length=65535)
    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="statusByStatusIdFrom")
    public Set<Statusrel> getStatusrelsForStatusIdFrom() {
        return this.statusrelsForStatusIdFrom;
    }
    
    public void setStatusrelsForStatusIdFrom(Set<Statusrel> statusrelsForStatusIdFrom) {
        this.statusrelsForStatusIdFrom = statusrelsForStatusIdFrom;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="role2status", joinColumns = { 
        @JoinColumn(name="statusId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="roleId", nullable=false, updatable=false) })
    public Set<Role> getRoles() {
        return this.roles;
    }
    
    public void setRoles(Set<Role> roles) {
        this.roles = roles;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="statusByStatusIdTo")
    public Set<Statusrel> getStatusrelsForStatusIdTo() {
        return this.statusrelsForStatusIdTo;
    }
    
    public void setStatusrelsForStatusIdTo(Set<Statusrel> statusrelsForStatusIdTo) {
        this.statusrelsForStatusIdTo = statusrelsForStatusIdTo;
    }




}


