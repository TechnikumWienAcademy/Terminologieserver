/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package de.fhdo.db.hibernate;
// Generated 10.10.2012 15:20:29 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PropertyVersion generated by hbm2java
 */
@Entity
@Table(name="property_version"
    
)
public class PropertyVersion  implements java.io.Serializable {


     private Long versionId;
     private Property property;
     private CodeSystemEntityVersion codeSystemEntityVersion;
     private Long previousVersionId;
     private Integer status;
     private Date statusDate;
     private Date insertTimestamp;
     private String name;
     private String description;
     private Long languageId;
     private Long propertyKindId;
     private byte[] content;
     private String contentName;
     private String contentMimetype;
     private Integer contentSize;

    public PropertyVersion() {
    }

	
    public PropertyVersion(Property property, CodeSystemEntityVersion codeSystemEntityVersion, Date insertTimestamp, String name, String description) {
        this.property = property;
        this.codeSystemEntityVersion = codeSystemEntityVersion;
        this.insertTimestamp = insertTimestamp;
        this.name = name;
        this.description = description;
    }
    public PropertyVersion(Property property, CodeSystemEntityVersion codeSystemEntityVersion, Long previousVersionId, Integer status, Date statusDate, Date insertTimestamp, String name, String description, Long languageId, Long propertyKindId, byte[] content, String contentName, String contentMimetype, Integer contentSize) {
       this.property = property;
       this.codeSystemEntityVersion = codeSystemEntityVersion;
       this.previousVersionId = previousVersionId;
       this.status = status;
       this.statusDate = statusDate;
       this.insertTimestamp = insertTimestamp;
       this.name = name;
       this.description = description;
       this.languageId = languageId;
       this.propertyKindId = propertyKindId;
       this.content = content;
       this.contentName = contentName;
       this.contentMimetype = contentMimetype;
       this.contentSize = contentSize;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="versionId", unique=true, nullable=false)
    public Long getVersionId() {
        return this.versionId;
    }
    
    public void setVersionId(Long versionId) {
        this.versionId = versionId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="propertyId", nullable=false)
    public Property getProperty() {
        return this.property;
    }
    
    public void setProperty(Property property) {
        this.property = property;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemEntityVersionId", nullable=false)
    public CodeSystemEntityVersion getCodeSystemEntityVersion() {
        return this.codeSystemEntityVersion;
    }
    
    public void setCodeSystemEntityVersion(CodeSystemEntityVersion codeSystemEntityVersion) {
        this.codeSystemEntityVersion = codeSystemEntityVersion;
    }
    
    @Column(name="previousVersionId")
    public Long getPreviousVersionId() {
        return this.previousVersionId;
    }
    
    public void setPreviousVersionId(Long previousVersionId) {
        this.previousVersionId = previousVersionId;
    }
    
    @Column(name="status")
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="statusDate", length=19)
    public Date getStatusDate() {
        return this.statusDate;
    }
    
    public void setStatusDate(Date statusDate) {
        this.statusDate = statusDate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insertTimestamp", nullable=false, length=19)
    public Date getInsertTimestamp() {
        return this.insertTimestamp;
    }
    
    public void setInsertTimestamp(Date insertTimestamp) {
        this.insertTimestamp = insertTimestamp;
    }
    
    @Column(name="name", nullable=false, length=65535)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="description", nullable=false, length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="languageId")
    public Long getLanguageId() {
        return this.languageId;
    }
    
    public void setLanguageId(Long languageId) {
        this.languageId = languageId;
    }
    
    @Column(name="propertyKindId")
    public Long getPropertyKindId() {
        return this.propertyKindId;
    }
    
    public void setPropertyKindId(Long propertyKindId) {
        this.propertyKindId = propertyKindId;
    }
    
    @Column(name="content")
    public byte[] getContent() {
        return this.content;
    }
    
    public void setContent(byte[] content) {
        this.content = content;
    }
    
    @Column(name="contentName")
    public String getContentName() {
        return this.contentName;
    }
    
    public void setContentName(String contentName) {
        this.contentName = contentName;
    }
    
    @Column(name="contentMimetype", length=50)
    public String getContentMimetype() {
        return this.contentMimetype;
    }
    
    public void setContentMimetype(String contentMimetype) {
        this.contentMimetype = contentMimetype;
    }
    
    @Column(name="contentSize")
    public Integer getContentSize() {
        return this.contentSize;
    }
    
    public void setContentSize(Integer contentSize) {
        this.contentSize = contentSize;
    }




}


