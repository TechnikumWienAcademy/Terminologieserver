/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package de.fhdo.db.hibernate;
// Generated 10.10.2012 15:20:29 by Hibernate Tools 3.2.1.GA


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * CodeSystemConceptTranslation generated by hbm2java
 */
@Entity
@Table(name="code_system_concept_translation"
    
)
public class CodeSystemConceptTranslation  implements java.io.Serializable {


     private Long id;
     private CodeSystemConcept codeSystemConcept;
     private String term;
     private String termAbbrevation;
     private long languageId;
     private String description;

    public CodeSystemConceptTranslation() {
    }

	
    public CodeSystemConceptTranslation(CodeSystemConcept codeSystemConcept, String term, long languageId) {
        this.codeSystemConcept = codeSystemConcept;
        this.term = term;
        this.languageId = languageId;
    }
    public CodeSystemConceptTranslation(CodeSystemConcept codeSystemConcept, String term, String termAbbrevation, long languageId, String description) {
       this.codeSystemConcept = codeSystemConcept;
       this.term = term;
       this.termAbbrevation = termAbbrevation;
       this.languageId = languageId;
       this.description = description;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemEntityVersionId", nullable=false)
    public CodeSystemConcept getCodeSystemConcept() {
        return this.codeSystemConcept;
    }
    
    public void setCodeSystemConcept(CodeSystemConcept codeSystemConcept) {
        this.codeSystemConcept = codeSystemConcept;
    }
    
    @Column(name="term", nullable=false, length=65535)
    public String getTerm() {
        return this.term;
    }
    
    public void setTerm(String term) {
        this.term = term;
    }
    
    @Column(name="termAbbrevation", length=50)
    public String getTermAbbrevation() {
        return this.termAbbrevation;
    }
    
    public void setTermAbbrevation(String termAbbrevation) {
        this.termAbbrevation = termAbbrevation;
    }
    
    @Column(name="languageId", nullable=false)
    public long getLanguageId() {
        return this.languageId;
    }
    
    public void setLanguageId(long languageId) {
        this.languageId = languageId;
    }
    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }




}


