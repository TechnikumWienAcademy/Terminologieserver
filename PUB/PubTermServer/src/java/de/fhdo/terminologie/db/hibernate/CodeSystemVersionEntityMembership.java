/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package de.fhdo.terminologie.db.hibernate;
// Generated 10.10.2012 15:20:29 by Hibernate Tools 3.2.1.GA


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

/**
 * CodeSystemVersionEntityMembership generated by hbm2java
 */
@XmlRootElement
@XmlType(namespace = "de.fhdo.termserver.types")
@Entity
@Table(name="code_system_version_entity_membership"
    
)
public class CodeSystemVersionEntityMembership  implements java.io.Serializable {


     private CodeSystemVersionEntityMembershipId id;
     private CodeSystemVersion codeSystemVersion;
     private CodeSystemEntity codeSystemEntity;
     private Boolean isAxis;
     private Boolean isMainClass;

    public CodeSystemVersionEntityMembership() {
    }

	
    public CodeSystemVersionEntityMembership(CodeSystemVersionEntityMembershipId id, CodeSystemVersion codeSystemVersion, CodeSystemEntity codeSystemEntity) {
        this.id = id;
        this.codeSystemVersion = codeSystemVersion;
        this.codeSystemEntity = codeSystemEntity;
    }
    public CodeSystemVersionEntityMembership(CodeSystemVersionEntityMembershipId id, CodeSystemVersion codeSystemVersion, CodeSystemEntity codeSystemEntity, Boolean isAxis, Boolean isMainClass) {
       this.id = id;
       this.codeSystemVersion = codeSystemVersion;
       this.codeSystemEntity = codeSystemEntity;
       this.isAxis = isAxis;
       this.isMainClass = isMainClass;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="codeSystemVersionId", column=@Column(name="codeSystemVersionId", nullable=false) ), 
        @AttributeOverride(name="codeSystemEntityId", column=@Column(name="codeSystemEntityId", nullable=false) ) } )
    public CodeSystemVersionEntityMembershipId getId() {
        return this.id;
    }
    
    public void setId(CodeSystemVersionEntityMembershipId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemVersionId", nullable=false, insertable=false, updatable=false)
    public CodeSystemVersion getCodeSystemVersion() {
        return this.codeSystemVersion;
    }
    
    public void setCodeSystemVersion(CodeSystemVersion codeSystemVersion) {
        this.codeSystemVersion = codeSystemVersion;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemEntityId", nullable=false, insertable=false, updatable=false)
    public CodeSystemEntity getCodeSystemEntity() {
        return this.codeSystemEntity;
    }
    
    public void setCodeSystemEntity(CodeSystemEntity codeSystemEntity) {
        this.codeSystemEntity = codeSystemEntity;
    }
    
    @Column(name="isAxis")
    public Boolean getIsAxis() {
        return this.isAxis;
    }
    
    public void setIsAxis(Boolean isAxis) {
        this.isAxis = isAxis;
    }
    
    @Column(name="isMainClass")
    public Boolean getIsMainClass() {
        return this.isMainClass;
    }
    
    public void setIsMainClass(Boolean isMainClass) {
        this.isMainClass = isMainClass;
    }




}


