/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package de.fhdo.db.hibernate;
// Generated 24.10.2011 10:08:21 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CodeSystemConcept generated by hbm2java
 */
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
@XmlRootElement
@XmlType(namespace="de.fhdo.termserver.idp.types")
@Entity
@Table(name="code_system_concept"
    
)
public class CodeSystemConcept  implements java.io.Serializable {


     private long codeSystemEntityVersionId;
     private CodeSystemEntityVersion codeSystemEntityVersion;
     private String code;
     private String term;
     private String termAbbrevation;
     private String description;
     private Boolean isPreferred;
     private String meaning;
     private String hints;
     private Set<CodeSystemConceptTranslation> codeSystemConceptTranslations = new HashSet<CodeSystemConceptTranslation>(0);

    public CodeSystemConcept() {
    }

	
    public CodeSystemConcept(long codeSystemEntityVersionId, CodeSystemEntityVersion codeSystemEntityVersion, String code, String term) {
        this.codeSystemEntityVersionId = codeSystemEntityVersionId;
        this.codeSystemEntityVersion = codeSystemEntityVersion;
        this.code = code;
        this.term = term;
    }
    public CodeSystemConcept(long codeSystemEntityVersionId, CodeSystemEntityVersion codeSystemEntityVersion, String code, String term, String termAbbrevation, String description, Boolean isPreferred, Set<CodeSystemConceptTranslation> codeSystemConceptTranslations, String meaning, String hints) {
       this.codeSystemEntityVersionId = codeSystemEntityVersionId;
       this.codeSystemEntityVersion = codeSystemEntityVersion;
       this.code = code;
       this.term = term;
       this.termAbbrevation = termAbbrevation;
       this.description = description;
       this.isPreferred = isPreferred;
       this.codeSystemConceptTranslations = codeSystemConceptTranslations;
       this.meaning = meaning;
       this.hints = hints;
    }
   
     @Id 
    
    @Column(name="codeSystemEntityVersionId", unique=true, nullable=false)
    public long getCodeSystemEntityVersionId() {
        return this.codeSystemEntityVersionId;
    }
    
    public void setCodeSystemEntityVersionId(long codeSystemEntityVersionId) {
        this.codeSystemEntityVersionId = codeSystemEntityVersionId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemEntityVersionId", unique=true, nullable=false, insertable=false, updatable=false)
    public CodeSystemEntityVersion getCodeSystemEntityVersion() {
        return this.codeSystemEntityVersion;
    }
    
    public void setCodeSystemEntityVersion(CodeSystemEntityVersion codeSystemEntityVersion) {
        this.codeSystemEntityVersion = codeSystemEntityVersion;
    }
    
    @Column(name="code", nullable=false, length=100)
    public String getCode() {
        return this.code;
    }
    
    public void setCode(String code) {
        this.code = code;
    }
    
    @Column(name="term", nullable=false, length=65535)
    public String getTerm() {
        return this.term;
    }
    
    public void setTerm(String term) {
        this.term = term;
    }
    
    @Column(name="termAbbrevation", length=50)
    public String getTermAbbrevation() {
        return this.termAbbrevation;
    }
    
    public void setTermAbbrevation(String termAbbrevation) {
        this.termAbbrevation = termAbbrevation;
    }
    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="isPreferred")
    public Boolean getIsPreferred() {
        return this.isPreferred;
    }
    
    public void setIsPreferred(Boolean isPreferred) {
        this.isPreferred = isPreferred;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="codeSystemConcept")
    public Set<CodeSystemConceptTranslation> getCodeSystemConceptTranslations() {
        return this.codeSystemConceptTranslations;
    }
    
    public void setCodeSystemConceptTranslations(Set<CodeSystemConceptTranslation> codeSystemConceptTranslations) {
        this.codeSystemConceptTranslations = codeSystemConceptTranslations;
    }
    
    @Column(name="meaning", length=65535)
    public String getMeaning() {
        return meaning;
    }

    public void setMeaning(String meaning) {
        this.meaning = meaning;
    }
    
    @Column(name="hints", length=65535)
    public String getHints() {
        return hints;
    }

    public void setHints(String hints) {
        this.hints = hints;
    }
}


