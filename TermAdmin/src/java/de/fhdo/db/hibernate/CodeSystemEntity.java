/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package de.fhdo.db.hibernate;
// Generated 10.10.2012 15:20:29 by Hibernate Tools 3.2.1.GA


import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * CodeSystemEntity generated by hbm2java
 */
@Entity
@Table(name="code_system_entity"
  
)
public class CodeSystemEntity  implements java.io.Serializable {


     private Long id;
     private Long currentVersionId;
     private Set<CodeSystemVersionEntityMembership> codeSystemVersionEntityMemberships = new HashSet<CodeSystemVersionEntityMembership>(0);
     private Set<CodeSystemEntityVersion> codeSystemEntityVersions = new HashSet<CodeSystemEntityVersion>(0);

    public CodeSystemEntity() {
    }

    public CodeSystemEntity(Long currentVersionId, Set<CodeSystemVersionEntityMembership> codeSystemVersionEntityMemberships, Set<CodeSystemEntityVersion> codeSystemEntityVersions) {
       this.currentVersionId = currentVersionId;
       this.codeSystemVersionEntityMemberships = codeSystemVersionEntityMemberships;
       this.codeSystemEntityVersions = codeSystemEntityVersions;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    
    @Column(name="currentVersionId")
    public Long getCurrentVersionId() {
        return this.currentVersionId;
    }
    
    public void setCurrentVersionId(Long currentVersionId) {
        this.currentVersionId = currentVersionId;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="codeSystemEntity")
    public Set<CodeSystemVersionEntityMembership> getCodeSystemVersionEntityMemberships() {
        return this.codeSystemVersionEntityMemberships;
    }
    
    public void setCodeSystemVersionEntityMemberships(Set<CodeSystemVersionEntityMembership> codeSystemVersionEntityMemberships) {
        this.codeSystemVersionEntityMemberships = codeSystemVersionEntityMemberships;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="codeSystemEntity")
    public Set<CodeSystemEntityVersion> getCodeSystemEntityVersions() {
        return this.codeSystemEntityVersions;
    }
    
    public void setCodeSystemEntityVersions(Set<CodeSystemEntityVersion> codeSystemEntityVersions) {
        this.codeSystemEntityVersions = codeSystemEntityVersions;
    }




}


