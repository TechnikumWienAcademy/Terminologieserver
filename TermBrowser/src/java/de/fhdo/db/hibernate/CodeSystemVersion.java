/* 
 * CTS2 based Terminology Server and Terminology Browser
 * Copyright (C) 2013 FH Dortmund: Peter Haas, Robert Muetzner
 * government-funded by the Ministry of Health of Germany
 * government-funded by the Ministry of Health, Equalities, Care and Ageing of North Rhine-Westphalia and the European Union
 * 
 * This program is free software: you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License as published by the 
 * Free Software Foundation, either version 3 of the License, or (at your 
 * option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY 
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * for more details.
 *  
 * You should have received a copy of the GNU General Public License 
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package de.fhdo.db.hibernate;
// Generated 10.10.2012 15:20:29 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CodeSystemVersion generated by hbm2java
 */
@Entity
@Table(name="code_system_version"
    
)
public class CodeSystemVersion  implements java.io.Serializable {


     private Long versionId;
     private CodeSystem codeSystem;
     private Long previousVersionId;
     private String name;
     private Integer status;
     private Date statusDate;
     private Date releaseDate;
     private Date expirationDate;
     private Date lastChangeDate;
     private String source;
     private String description;
     private Long preferredLanguageId;
     private String oid;
     private String licenceHolder;
     private Boolean underLicence;
     private Date insertTimestamp;
     private Set<CodeSystemVersionEntityMembership> codeSystemVersionEntityMemberships = new HashSet<CodeSystemVersionEntityMembership>(0);
     private Set<LicencedUser> licencedUsers = new HashSet<LicencedUser>(0);
     private Set<LicenceType> licenceTypes = new HashSet<LicenceType>(0);

    public CodeSystemVersion() {
    }

	
    public CodeSystemVersion(CodeSystem codeSystem, String name, Date statusDate, Date insertTimestamp) {
        this.codeSystem = codeSystem;
        this.name = name;
        this.statusDate = statusDate;
        this.insertTimestamp = insertTimestamp;
    }
    public CodeSystemVersion(CodeSystem codeSystem, Long previousVersionId, String name, Integer status, Date statusDate, Date releaseDate, Date expirationDate, Date lastChangeDate, String source, String description, Long preferredLanguageId, String oid, String licenceHolder, Boolean underLicence, Date insertTimestamp, Set<CodeSystemVersionEntityMembership> codeSystemVersionEntityMemberships, Set<LicencedUser> licencedUsers, Set<LicenceType> licenceTypes) {
       this.codeSystem = codeSystem;
       this.previousVersionId = previousVersionId;
       this.name = name;
       this.status = status;
       this.statusDate = statusDate;
       this.releaseDate = releaseDate;
       this.expirationDate = expirationDate;
       this.lastChangeDate = lastChangeDate;
       this.source = source;
       this.description = description;
       this.preferredLanguageId = preferredLanguageId;
       this.oid = oid;
       this.licenceHolder = licenceHolder;
       this.underLicence = underLicence;
       this.insertTimestamp = insertTimestamp;
       this.codeSystemVersionEntityMemberships = codeSystemVersionEntityMemberships;
       this.licencedUsers = licencedUsers;
       this.licenceTypes = licenceTypes;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="versionId", unique=true, nullable=false)
    public Long getVersionId() {
        return this.versionId;
    }
    
    public void setVersionId(Long versionId) {
        this.versionId = versionId;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="codeSystemId", nullable=false)
    public CodeSystem getCodeSystem() {
        return this.codeSystem;
    }
    
    public void setCodeSystem(CodeSystem codeSystem) {
        this.codeSystem = codeSystem;
    }
    
    @Column(name="previousVersionID")
    public Long getPreviousVersionId() {
        return this.previousVersionId;
    }
    
    public void setPreviousVersionId(Long previousVersionId) {
        this.previousVersionId = previousVersionId;
    }
    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="status")
    public Integer getStatus() {
        return this.status;
    }
    
    public void setStatus(Integer status) {
        this.status = status;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="statusDate", nullable=false, length=19)
    public Date getStatusDate() {
        return this.statusDate;
    }
    
    public void setStatusDate(Date statusDate) {
        this.statusDate = statusDate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="releaseDate", length=19)
    public Date getReleaseDate() {
        return this.releaseDate;
    }
    
    public void setReleaseDate(Date releaseDate) {
        this.releaseDate = releaseDate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="expirationDate", length=19)
    public Date getExpirationDate() {
        return this.expirationDate;
    }
    
    public void setExpirationDate(Date expirationDate) {
        this.expirationDate = expirationDate;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastChangeDate", length=19)
    public Date getLastChangeDate() {
        return this.lastChangeDate;
    }
    
    public void setLastChangeDate(Date lastChangeDate) {
        this.lastChangeDate = lastChangeDate;
    }
    @Column(name="source", length=65535)
    public String getSource() {
        return this.source;
    }
    
    public void setSource(String source) {
        this.source = source;
    }
    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    @Column(name="preferredLanguageId")
    public Long getPreferredLanguageId() {
        return this.preferredLanguageId;
    }
    
    public void setPreferredLanguageId(Long preferredLanguageId) {
        this.preferredLanguageId = preferredLanguageId;
    }
    
    @Column(name="oid", length=100)
    public String getOid() {
        return this.oid;
    }
    
    public void setOid(String oid) {
        this.oid = oid;
    }
    
    @Column(name="licenceHolder", length=65535)
    public String getLicenceHolder() {
        return this.licenceHolder;
    }
    
    public void setLicenceHolder(String licenceHolder) {
        this.licenceHolder = licenceHolder;
    }
    
    @Column(name="underLicence")
    public Boolean getUnderLicence() {
        return this.underLicence;
    }
    
    public void setUnderLicence(Boolean underLicence) {
        this.underLicence = underLicence;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="insertTimestamp", nullable=false, length=19)
    public Date getInsertTimestamp() {
        return this.insertTimestamp;
    }
    
    public void setInsertTimestamp(Date insertTimestamp) {
        this.insertTimestamp = insertTimestamp;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="codeSystemVersion")
    public Set<CodeSystemVersionEntityMembership> getCodeSystemVersionEntityMemberships() {
        return this.codeSystemVersionEntityMemberships;
    }
    
    public void setCodeSystemVersionEntityMemberships(Set<CodeSystemVersionEntityMembership> codeSystemVersionEntityMemberships) {
        this.codeSystemVersionEntityMemberships = codeSystemVersionEntityMemberships;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="codeSystemVersion")
    public Set<LicencedUser> getLicencedUsers() {
        return this.licencedUsers;
    }
    
    public void setLicencedUsers(Set<LicencedUser> licencedUsers) {
        this.licencedUsers = licencedUsers;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="codeSystemVersion")
    public Set<LicenceType> getLicenceTypes() {
        return this.licenceTypes;
    }
    
    public void setLicenceTypes(Set<LicenceType> licenceTypes) {
        this.licenceTypes = licenceTypes;
    }




}


